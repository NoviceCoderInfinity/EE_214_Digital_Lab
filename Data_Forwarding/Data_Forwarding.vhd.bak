library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity DataForwardingScheme is
    port (
        clk              : in  std_logic;
        reset            : in  std_logic;
        memory_words     : in  std_logic_vector(3 downto 0);
        forward_words    : in  std_logic_vector(3 downto 0);
        update_signals_m : in  std_logic_vector(3 downto 0);
        update_signals_f : in  std_logic_vector(3 downto 0);
        weights_m        : inout std_logic_vector(3 downto 0);
        weights_f        : inout std_logic_vector(3 downto 0)
    );
end entity DataForwardingScheme;

architecture Behavioral of DataForwardingScheme is
begin
    process (clk, reset)`
    begin
        if (reset = '1') then
            weights_m <= (others => (others => '0'));
            weights_f <= (others => (others => '0'));
        elsif rising_edge(clk) then
            for m in 0 to 3 loop
                for n in 0 to 3 loop
                    if (memory_words(m) = forward_words(n) and
                       update_signals_m(m) = '1' and
                       update_signals_f(n) = '1') then
                       
                        weights_m(m) <= weights_f(n);
                        exit; 
                    end if;
                end loop;
            end loop;
        end if;
    end process;
end architecture Behavioral;